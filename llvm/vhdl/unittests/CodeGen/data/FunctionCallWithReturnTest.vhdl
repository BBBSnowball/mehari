-- generated by Mehari
library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;
library work;

entity test is
   port ( 
         aclk : in std_logic;
         a_in_data : in  std_logic_vector(31 downto 0);
         a_in_valid : in std_logic;
         a_in_ready : out std_logic;
         a_out_data : out  std_logic_vector(31 downto 0);
         a_out_valid : out std_logic;
         a_out_ready : in std_logic
   );
end entity;

architecture arch of test is
   component func is
      port ( 
         aclk : in std_logic;
         arg0_data : in  std_logic_vector(31 downto 0);
         arg0_valid : in std_logic;
         arg0_ready : out std_logic;
         result_data : out  std_logic_vector(31 downto 0);
         result_valid : out std_logic;
         result_ready : in std_logic
   );
   end component;

signal a_in_ready_ : std_logic;
signal t0_data :  std_logic_vector(31 downto 0);
signal t0_valid : std_logic;
signal t0_ready : std_logic;
signal t0_data_ :  std_logic_vector(31 downto 0);
signal t0_valid_ : std_logic;
begin
   a_in_ready <= a_in_ready_;
   t0_data <= t0_data_;
   t0_valid <= t0_valid_;
   t0: func
      port map ( aclk => aclk,
                 arg0_data => a_in_data,
                 arg0_ready => a_in_ready_,
                 arg0_valid => a_in_valid,
                 result_data => t0_data_,
                 result_ready => t0_ready,
                 result_valid => t0_valid_);
   a_out_data <= t0_data;
   a_out_valid <= t0_valid;
   t0_ready <= a_out_ready;
end architecture;

