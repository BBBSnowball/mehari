task prepareCMake(type: Exec) {
	commandLine "cmake", "."

	inputs.file file("CMakeLists.txt")
	outputs.file file("Makefile")
}

task compilePPrint(type: Exec) {
	commandLine "make", "pprint"

	dependsOn prepareCMake

	inputs.files prepareCMake.outputs
	inputs.files fileTree(".").include("**/*.h").include("**/pprint_*.cpp")
	outputs.file "libpprint.so"
}

task compileVhdlgen(type: Exec) {
	commandLine "make", "vhdlgen"

	dependsOn prepareCMake, compilePPrint

	inputs.files prepareCMake.outputs
	inputs.files fileTree(".").include("**/*.h").include("**/vhdlgen*.cpp")
	inputs.files compilePPrint.outputs
	outputs.file file("libvhdlgen.so")
}

task compileTest(type: Exec) {
	commandLine "make", "test"

	ext.sourceFiles = fileTree(".").include("**/*.cpp").files

	inputs.files prepareCMake.outputs
	inputs.files fileTree(".").include("**/*.h").include("**/test*.cpp")
	outputs.file file("test")

	dependsOn prepareCMake, ":tools:installGTest", ":tools:installGMock"
}

task test(type: Exec) {
	commandLine "./test"

	dependsOn compileTest
}

task compilePPrintPython(type: Exec) {
	commandLine "make", "_pprint"

	dependsOn prepareCMake, compilePPrint

	inputs.files prepareCMake.outputs
	inputs.files compilePPrint.outputs
	inputs.files fileTree(".").include("**/*.h")
	inputs.file  file("pprint.i")
	outputs.file file("pprint.py")
	outputs.file file("_pprint.so")
}

task compileVhdlgenPython(type: Exec) {
	commandLine "make", "_vhdlgen"

	dependsOn prepareCMake, compilePPrint

	inputs.files prepareCMake.outputs
	inputs.files compilePPrint.outputs
	inputs.files compileVhdlgen.outputs
	inputs.files fileTree(".").include("**/*.h")
	inputs.file  file("pprint.i")
	inputs.file  file("vhdlgen.i")
	outputs.file file("vhdlgen.py")
	outputs.file file("_vhdlgen.so")
}

task compile {
	dependsOn compilePPrint, compileVhdlgen, compilePPrintPython, compileVhdlgenPython, compileTest
}

task clean(type: Delete) {
	delete "pprint.py"
	delete "vhdlgen.py"
	delete "cmake_install.cmake"
	delete "CMakeCache.txt"
	delete "CMakeFiles"
	delete "Makefile"
	delete fileTree(".")
		.include("*_wrap.cxx")
		.include("*.so")
		.include("*.pyc")
		.include("*.tap")
}
